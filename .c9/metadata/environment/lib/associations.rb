{"filter":false,"title":"associations.rb","tooltip":"/lib/associations.rb","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":42,"column":4},"action":"insert","lines":[" require 'sqlite3'"," require 'active_support/inflector'"," "," module Associations","   def has_many(association)","    define_method(association) do","       #2","       rows = self.class.connection.execute <<-SQL","         SELECT * FROM #{association.to_s.singularize}","         WHERE #{self.class.table}_id = #{self.id}","       SQL"," ","       #3","       class_name = association.to_s.classify.constantize","       collection = BlocRecord::Collection.new"," ","       #4","       rows.each do |row|","         collection << class_name.new(Hash[class_name.columns.zip(row)])","       end"," ","       #5","       collection","     end","   end","   ","   def belongs_to(association)","     define_method(association) do","       association_name = association.to_s","       row = self.class.connection.get_first_row <<-SQL","         SELECT * FROM #{association_name}","         WHERE id = #{self.send(association_name + \"_id\")}","       SQL"," ","       class_name = association_name.classify.constantize"," ","       if row","         data = Hash[class_name.columns.zip(row)]","         class_name.new(data)","       end","     end","   end"," end"],"id":1}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":42,"column":4},"end":{"row":42,"column":4},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1580628613356,"hash":"cb2ff7d5490e5593c1e5eb8860b60f4310a1012e"}